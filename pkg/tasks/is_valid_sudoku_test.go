package tasks

import (
	"fmt"
	"reflect"
	"testing"
)

func TestIsValidSudoku(t *testing.T) {
	var tests = []struct {
		board [][]string
		exp   bool
	}{
		{
			[][]string{
				{"5", "3", ".", ".", "7", ".", ".", ".", "."},
				{"6", ".", ".", "1", "9", "5", ".", ".", "."},
				{".", "9", "8", ".", ".", ".", ".", "6", "."},
				{"8", ".", ".", ".", "6", ".", ".", ".", "3"},
				{"4", ".", ".", "8", ".", "3", ".", ".", "1"},
				{"7", ".", ".", ".", "2", ".", ".", ".", "6"},
				{".", "6", ".", ".", ".", ".", "2", "8", "."},
				{".", ".", ".", "4", "1", "9", ".", ".", "5"},
				{".", ".", ".", ".", "8", ".", ".", "7", "9"},
			},
			true,
		},
		{
			[][]string{
				{"8", "3", ".", ".", "7", ".", ".", ".", "."},
				{"6", ".", ".", "1", "9", "5", ".", ".", "."},
				{".", "9", "8", ".", ".", ".", ".", "6", "."},
				{"8", ".", ".", ".", "6", ".", ".", ".", "3"},
				{"4", ".", ".", "8", ".", "3", ".", ".", "1"},
				{"7", ".", ".", ".", "2", ".", ".", ".", "6"},
				{".", "6", ".", ".", ".", ".", "2", "8", "."},
				{".", ".", ".", "4", "1", "9", ".", ".", "5"},
				{".", ".", ".", ".", "8", ".", ".", "7", "9"},
			},
			false,
		},
	}
	for _, tc := range tests {
		var board [][]byte
		board = make([][]byte, 9)
		for i := 0; i < 9; i++ {
			board[i] = make([]byte, 9)
		}

		for i := 0; i < len(tc.board); i++ {
			for j := 0; j < len(tc.board); j++ {
				board[i][j] = []byte(tc.board[i][j])[0]
			}
		}
		fmt.Println(board)
		res := isValidSudoku(board)
		if !reflect.DeepEqual(res, tc.exp) {
			t.Errorf("FindIntegers(%d): Expected %t, got %t", board,
				tc.exp, res)
		}
	}

}
